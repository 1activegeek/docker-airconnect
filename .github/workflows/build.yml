name: Multi-Arch Build

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 2 * * 6'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup qemu
        uses: docker/setup-qemu-action@v1
        
      - name: Setup buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Prepare build and tags
        id: prepare
        run: |
          DOCKER_IMAGE=1activegeek/airconnect
          DOCKER_PLATFORMS=linux/amd64,linux/arm/v7,linux/arm64
          VERSION=dev

          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            VERSION=latest
          fi

          if [ "${{ github.event }}" = "schedule" ]; then
            VERSION=latest
          fi

          TAGS="--tag ${DOCKER_IMAGE}:${VERSION}"
          
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
            --build-arg VERSION=${VERSION} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8} \
            ${TAGS} --file ./Dockerfile ./

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and Push
        if: github.event_name != 'pull_request'
        run: |
          docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}

      - name: Inspect Image
        if: github.event_name != 'pull_request'
        run: |
          docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}